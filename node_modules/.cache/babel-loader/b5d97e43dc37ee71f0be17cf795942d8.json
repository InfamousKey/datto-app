{"ast":null,"code":"var _jsxFileName = \"/home/rob/SSD2/projects/datto-app/datto-app/src/components/main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { fetchApi } from './methods/methods';\nimport Header from './header';\nimport Footer from './footer';\nimport SideNav from './side-nav';\nimport Content from './content';\nimport '../css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [tab, setTab] = useState('');\n  const [error, setError] = useState({});\n  useEffect(() => {\n    // call an API and in the success or failure fill the data buy using setData function\n    // it could be like below\n    fetchApi('https://db.ygoprodeck.com/api/v7/cardinfo.php').then(response => response.json()).then(data => console.log(data)).then(response => {\n      const responseFilter = response;\n      console.log(response);\n      setItems(responseFilter);\n    }).catch(err => setError(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SideNav, {\n      list: items,\n      currentTab: tab,\n      setTab: tabName => setTab(tabName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), tab !== '' && /*#__PURE__*/_jsxDEV(Content, {\n      items: items[tab] // setItems={newList => setItems([\n      // \t...items,\n      // \t[tab]: ...newList,\n      // ])}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"EQTjyeIxEWuGUl3zBN+7v6ftiLI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rob/SSD2/projects/datto-app/datto-app/src/components/main.js"],"names":["useState","useEffect","fetchApi","Header","Footer","SideNav","Content","App","items","setItems","tab","setTab","error","setError","then","response","json","data","console","log","responseFilter","catch","err","tabName"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACCC,QADD,QAEO,mBAFP;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACAC,IAAAA,QAAQ,CAAC,+CAAD,CAAR,CACEY,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFf,EAGEH,IAHF,CAGOC,QAAQ,IAAI;AACjB,YAAMK,cAAc,GAAGL,QAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAN,MAAAA,QAAQ,CAACW,cAAD,CAAR;AACA,KAPF,EAQEC,KARF,CAQQC,GAAG,IAAIT,QAAQ,CAACS,GAAD,CARvB;AASA,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,OAAD;AACC,MAAA,IAAI,EAAEd,KADP;AAEC,MAAA,UAAU,EAAEE,GAFb;AAGC,MAAA,MAAM,EAAEa,OAAO,IAAIZ,MAAM,CAACY,OAAD;AAH1B;AAAA;AAAA;AAAA;AAAA,YAFD,EAOEb,GAAG,KAAK,EAAR,iBACA,QAAC,OAAD;AACC,MAAA,KAAK,EAAEF,KAAK,CAACE,GAAD,CADb,CAEC;AACA;AACA;AACA;;AALD;AAAA;AAAA;AAAA;AAAA,YARF,eAgBC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CAvCD;;GAAMH,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n\tfetchApi\n} from './methods/methods'\nimport Header from './header';\nimport Footer from './footer';\nimport SideNav from './side-nav';\nimport Content from './content'\nimport '../css/App.css';\n\nconst App = () => {\n\tconst [items, setItems] = useState([]);\n\tconst [tab, setTab] = useState('');\n\tconst [error, setError] = useState({});\n\n\tuseEffect(() => {\n\t\t// call an API and in the success or failure fill the data buy using setData function\n\t\t// it could be like below\n\t\tfetchApi('https://db.ygoprodeck.com/api/v7/cardinfo.php')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => console.log(data))\n\t\t\t.then(response => {\n\t\t\t\tconst responseFilter = response;\n\t\t\t\tconsole.log(response)\n\t\t\t\tsetItems(responseFilter)\n\t\t\t})\n\t\t\t.catch(err => setError(err))\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<SideNav \n\t\t\t\tlist={items}\n\t\t\t\tcurrentTab={tab}\n\t\t\t\tsetTab={tabName => setTab(tabName)}\n\t\t\t/>\n\t\t\t{tab !== '' && (\n\t\t\t\t<Content\n\t\t\t\t\titems={items[tab]}\n\t\t\t\t\t// setItems={newList => setItems([\n\t\t\t\t\t// \t...items,\n\t\t\t\t\t// \t[tab]: ...newList,\n\t\t\t\t\t// ])}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}