{"ast":null,"code":"var _jsxFileName = \"/home/rob/SSD2/projects/datto-app/datto-app/src/components/main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { sortCards } from './methods/methods';\nimport Header from './header';\nimport Footer from './footer';\nimport SideNav from './side-nav';\nimport Content from './content';\nimport '../css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [items, setItems] = useState({});\n  const [tab, setTab] = useState('');\n  const [error, setError] = useState({});\n\n  const setupApp = async data => {\n    const sortedCards = await sortCards(data);\n    setTab(Object.keys(sortedCards)[0]);\n    setItems(sortedCards);\n  };\n\n  useEffect(() => {\n    if (Object.keys(items).length === 0) {\n      fetch('https://db.ygoprodeck.com/api/v7/cardinfo.php').then(response => response.json()).then(json => setupApp(json.data)).catch(err => setError(err));\n    }\n  }, [items]);\n  console.log(items, 'items');\n  console.log(tab, 'tab');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"lrvNYmMsXEOpqKv1Tn6KKJTKB2M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rob/SSD2/projects/datto-app/datto-app/src/components/main.js"],"names":["useState","useEffect","sortCards","Header","Footer","SideNav","Content","App","items","setItems","tab","setTab","error","setError","setupApp","data","sortedCards","Object","keys","length","fetch","then","response","json","catch","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACCC,SADD,QAEO,mBAFP;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,QAAQ,GAAG,MAAMC,IAAN,IAAc;AAC9B,UAAMC,WAAW,GAAG,MAAMd,SAAS,CAACa,IAAD,CAAnC;AACAJ,IAAAA,MAAM,CAACM,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyB,CAAzB,CAAD,CAAN;AACAP,IAAAA,QAAQ,CAACO,WAAD,CAAR;AACA,GAJD;;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIgB,MAAM,CAACC,IAAP,CAAYV,KAAZ,EAAmBW,MAAnB,KAA8B,CAAlC,EAAqC;AACpCC,MAAAA,KAAK,CAAC,+CAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOE,IAAI,IAAIT,QAAQ,CAACS,IAAI,CAACR,IAAN,CAFvB,EAGES,KAHF,CAGQC,GAAG,IAAIZ,QAAQ,CAACY,GAAD,CAHvB;AAIA;AACD,GAPQ,EAON,CAACjB,KAAD,CAPM,CAAT;AASAkB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ,EAAmB,OAAnB;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ,EAAiB,KAAjB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAkBC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA,CA7CD;;GAAMH,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n\tsortCards\n} from './methods/methods'\nimport Header from './header';\nimport Footer from './footer';\nimport SideNav from './side-nav';\nimport Content from './content';\nimport '../css/App.css';\n\nconst App = () => {\n\tconst [items, setItems] = useState({});\n\tconst [tab, setTab] = useState('');\n\tconst [error, setError] = useState({});\n\n\tconst setupApp = async data => {\n\t\tconst sortedCards = await sortCards(data);\n\t\tsetTab(Object.keys(sortedCards)[0]);\n\t\tsetItems(sortedCards);\n\t}\n\n\tuseEffect(() => {\n\t\tif (Object.keys(items).length === 0) {\n\t\t\tfetch('https://db.ygoprodeck.com/api/v7/cardinfo.php')\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(json => setupApp(json.data))\n\t\t\t\t.catch(err => setError(err))\n\t\t}\n\t}, [items]);\n\n\tconsole.log(items, 'items')\n\tconsole.log(tab, 'tab')\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t{/* {tab !== '' && (\n\t\t\t\t<>\n\t\t\t\t\t<SideNav \n\t\t\t\t\t\tlist={items}\n\t\t\t\t\t\tcurrentTab={tab}\n\t\t\t\t\t\tsetTab={tabName => setTab(tabName)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Content\n\t\t\t\t\t\titems={items[tab]}\n\t\t\t\t\t\tsetItems={newList => setItems({\n\t\t\t\t\t\t\t...items,\n\t\t\t\t\t\t\t[tab]: newList,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)} */}\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}